name: Reusable Slack Review Notifications Workflow

on:
  workflow_call:
    inputs:
      pull_request_number:
        required: true
        type: string

jobs:
  send_notification:
    name: Slack Review Notifications
    runs-on: ubuntu-latest
    if: github.event.pull_request.state == 'open'
    steps:
      - name: Delay Step
        run: sleep 20
      # Delay to ensure GitHub API has processed all events

      - name: Get Current PR
        id: get_pr
        uses: 8BitJonny/gh-get-current-pr@3.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ github.event_name != 'issue_comment' && github.event.pull_request.head.sha || '' }}

      - name: Checkout code-control-repo
        uses: actions/checkout@v4
        with:
          repository: StuartH1/Reusable-Workflow
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Send Slack Notification
        if: ${{ !contains(steps.get_pr.outputs.pr_labels, 'hotfix') }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DM_URL }}
          PR_OBJECT: ${{ toJSON(github.event.pull_request) }}
          GITHUB_ACTOR: ${{ github.actor }}
          PR_URL: ${{ steps.get_pr.outputs.pr_url }}
          PR_NUMBER: ${{ steps.get_pr.outputs.number }}
          GITHUB_EVENT_ACTION: ${{ github.event.action }}
          GITHUB_EVENT_REVIEW_STATE: ${{ github.event.review.state }}
          PR_AUTHOR: ${{ github.event.pull_request.user.login }}
          REPO_NAME: ${{ github.repository }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_DM_URL }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          PR_LABELS: ${{ toJSON(github.event.pull_request.labels) }}
        shell: bash
        run: python .github/scripts/send_slack_notification.py

      - name: Remove requested changes label
        if: contains(github.event.pull_request.labels.*.name, 'requested-changes')
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              name: 'requested-changes'
            });
